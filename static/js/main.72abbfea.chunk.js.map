{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setIsReversed","visuableGoods","goods","preparedGoods","sort","good1","good2","ALPHABETICALLY","localeCompare","LENGTH","length","reverse","getPreparedGoods","className","type","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAuBKA,E,0EAlBQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAQGD,K,gCAAAA,E,gBAAAA,E,SAAAA,M,KAML,IA4BaE,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAEMC,EAhCiB,SACvBC,EADuB,GAGnB,IADFL,EACC,EADDA,SAAUE,EACT,EADSA,WAERI,EAAa,YAAOD,GAqBxB,OAnBIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKL,EAASe,eACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKd,EAASiB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAKXX,IACFI,EAAgBA,EAAcQ,WAGzBR,EAOeS,CACpBnB,EACA,CAAEI,WAAUE,eAGd,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYlB,IAAaL,EAASe,iBAEtCS,QAAS,WACPlB,EAAYN,EAASe,iBAPzB,iCAaA,wBACEO,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYlB,IAAaL,EAASiB,SAEtCO,QAAS,WACPlB,EAAYN,EAASiB,SAPzB,4BAaA,wBACEK,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAA2B,IAAfhB,IAEhBiB,QAAS,WACPhB,GAAeD,IAPnB,sBAaEF,IAAaL,EAASI,MAAQG,IAE5B,wBACEe,KAAK,SACLD,UAAWE,IAAW,6BACtBC,QAAS,WACPhB,GAAc,GACdF,EAAYN,EAASI,OALzB,sBAaN,6BACGK,EAAcgB,KAAI,SAAAC,GAAI,OACrB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YC5HjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.72abbfea.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface SortParams {\n  sortType: SortType;\n  isReversed: boolean;\n}\n\nenum SortType {\n  ALPHABETICALLY = 'alphabetically',\n  LENGTH = 'length',\n  NONE = '',\n}\n\nconst getPreparedGoods = (\n  goods: string[],\n  { sortType, isReversed }: SortParams,\n) => {\n  let preparedGoods = [...goods];\n\n  if (sortType) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortType) {\n        case SortType.ALPHABETICALLY:\n          return good1.localeCompare(good2);\n\n        case SortType.LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    preparedGoods = preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n};\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const visuableGoods = getPreparedGoods(\n    goodsFromServer,\n    { sortType, isReversed },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            { 'is-light': sortType !== SortType.ALPHABETICALLY },\n          )}\n          onClick={() => {\n            setSortType(SortType.ALPHABETICALLY);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={() => {\n            setSortType(SortType.LENGTH);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            { 'is-light': isReversed !== true },\n          )}\n          onClick={() => {\n            setIsReversed(!isReversed);\n          }}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== SortType.NONE || isReversed)\n          && (\n            <button\n              type=\"button\"\n              className={classNames('button is-danger is-light')}\n              onClick={() => {\n                setIsReversed(false);\n                setSortType(SortType.NONE);\n              }}\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <ul>\n        {visuableGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}